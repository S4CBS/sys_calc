import sys_calc

binary_str = "1101.11"
print(sys_calc.binary_float_to_decimal(binary_str))  # Вывод: 13.75
octal_str = "30.2"
print(sys_calc.octal_float_to_decimal(octal_str))  # Вывод: 24.25
# Пример использования функции
print(sys_calc.float_to_hex_single(f=-21.25, d=127))  # Вывод: C1AA0000
print(hex(int(sys_calc.binary_float_to_decimal("1011.01")+sys_calc.octal_float_to_decimal("24.6")))[2:])

"""Для хранения произвольного растрового изображения размером 890 на 460 пикселей отведено 600 Кбайт памяти без учёта размера заголовка файла. 
При кодировании каждого пикселя используется 4 бит для определения степени прозрачности и одинаковое количество бит для указания его цвета. 
Коды пикселей записываются в файл один за другим без промежутков. Какое максимальное количество цветов можно использовать в изображении 
(без учёта степени прозрачности)?
В ответе запишите целое число, единицу измерения указывать не нужно.
"""
k=890*460
I=600*1024*8
i = I // k
N = 2**(i-4)
# print(N) # 256

"""В алгоритме шифрования RSA на одном из этапов формирования пары ключей используется формула:
(d·e) % f(n) = 1, где операция « % » — это остаток от деления.
Значение функции f(n) вычисляется по формуле f(n) = (p – 1)·(q – 1).
Определите наибольшее значение числа d, которое меньше 40, если известно, что p = 5, q = 7, e = 11.
"""
p=5
q=7
e=11
fn = (p-1)*(q-1)
for d in range(1,40):
    if (d*e)%fn == 1:
        # print(d)
        pass


"""В выражении используются поразрядные операции над восьмиразрядными целыми числами без знака:
~  – поразрядная инверсия
≫ – поразрядный сдвиг вправо
≪ – поразрядный сдвиг влево
&  – поразрядная конъюнкция
 |  – поразрядная дизъюнкция
"""
# print((~ 18 | (132 >> 2)) & (86 << 1)) # 172
